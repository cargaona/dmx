[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dmx-music"
version = "0.1.0"
description = "Interactive music search and download tool with Deezer integration - browse artists, albums, and download music"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    {name = "cargaona", email = "cargaona@users.noreply.github.com"}
]
license = {text = "MIT"}
keywords = ["music", "download", "deezer", "deemix", "audio", "interactive", "cli", "artist", "album", "search"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: System :: Archiving",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
]

dependencies = [
    "deemix",
    "click>=8.0.0",
    "colorama>=0.4.0",
    "requests>=2.25.0",
    "aiohttp>=3.8.0",
]

[project.urls]
"Homepage" = "https://github.com/cargaona/dmx"
"Bug Reports" = "https://github.com/cargaona/dmx/issues"
"Source" = "https://github.com/cargaona/dmx"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]

test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "aioresponses>=0.7.0",
]

[project.scripts]
dmx = "dmx.__main__:main"
dmx-music = "dmx.__main__:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["dmx*"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]